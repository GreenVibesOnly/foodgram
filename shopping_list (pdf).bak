        user = request.user
        if not ShoppingCart.objects.filter(user=user).exists():
            return Response(status=status.HTTP_400_BAD_REQUEST)
        ingredients_list = RecipeIngredient.objects.filter(
            recipe__shopping_cart__user=request.user
        ).values(
            'ingredient__name',
            'ingredient__measurement_unit'
        ).annotate(amount=Sum('amount'))
        buffer = BytesIO()
        file = canvas.Canvas('Foodgram_shopping_list.pdf')
        file.setFont('Times-Roman', 20)
        file.drawString(50, 50, 'Покупки дня')
        file.line(50, 100, 250, 100)
        #file.drawImage('media/shopping_list/fork_and_knife.png',
        #               350, 50, width=50, height=50)
        str_point = 120
        file.setFont('Times-Roman', 15)
        for ingredient in ingredients_list:
            ingredient_name = ingredient['ingredient__name']
            measurement_unit = ingredient['ingredient__measurement_unit']
            amount = ingredient['amount']
            file.drawString(50, str_point, f'- {ingredient_name}: '
                            f'{amount} {measurement_unit}')
            str_point += 20
        file.drawString(50, 800, 'Foodgram')
        file.save()
        buffer.seek(0)
        return FileResponse(
            buffer,
            as_attachment=True,
            filename='Foodgram_shopping_list.pdf'
        )